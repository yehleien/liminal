"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getXataClient = exports.XataClient = void 0;
// Generated by Xata Codegen 0.28.0. Please do not edit.
const client_1 = require("@xata.io/client");
/** @typedef { import('./types').SchemaTables } SchemaTables */
/** @type { SchemaTables } */
const tables = [
  {
    name: "Articles",
    columns: [
      { name: "url", type: "string", unique: true },
      { name: "title", type: "text" },
      { name: "userID", type: "link", link: { table: "Users" } },
    ],
    revLinks: [{ column: "articleID", table: "Comments" }],
  },
  {
    name: "Users",
    columns: [
      { name: "passwordHash", type: "string" },
      { name: "username", type: "string" },
      { name: "email", type: "email", unique: true },
    ],
    revLinks: [
      { column: "userID", table: "Perspectives" },
      { column: "userID", table: "Comments" },
      { column: "userID", table: "Articles" },
    ],
  },
  {
    name: "Comments",
    columns: [
      { name: "commentText", type: "text" },
      { name: "upvotes", type: "int" },
      { name: "downvotes", type: "int" },
      { name: "userID", type: "link", link: { table: "Users" } },
      { name: "articleID", type: "link", link: { table: "Articles" } },
      { name: "perspectiveID", type: "link", link: { table: "Perspectives" } },
      { name: "parentCommentID", type: "link", link: { table: "Comments" } },
    ],
    revLinks: [{ column: "parentCommentID", table: "Comments" }],
  },
  {
    name: "Perspectives",
    columns: [
      { name: "perspectiveTitle", type: "text" },
      { name: "userID", type: "link", link: { table: "Users" } },
    ],
    revLinks: [{ column: "perspectiveID", table: "Comments" }],
  },
];
/** @type { import('@xata.io/client').ClientConstructor<{}> } */
const DatabaseClient = (0, client_1.buildClient)();
const defaultOptions = {
  databaseURL:
    "https://yehleien-s-workspace-1rcb90.us-east-1.xata.sh/db/liminal",
};
/** @typedef { import('./types').DatabaseSchema } DatabaseSchema */
/** @extends DatabaseClient<DatabaseSchema> */
class XataClient extends DatabaseClient {
  constructor(options) {
    super({ ...defaultOptions, ...options }, tables);
  }
}
exports.XataClient = XataClient;
let instance = undefined;
/** @type { () => XataClient } */
const getXataClient = () => {
  if (instance) return instance;
  instance = new XataClient();
  return instance;
};
exports.getXataClient = getXataClient;
